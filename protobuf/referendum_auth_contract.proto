syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "acs1.proto";
import "acs3.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.Contracts.ReferendumAuth";

service ReferendumAuthContract {
    
    option (aelf.csharp_state) = "AElf.Contracts.ReferendumAuth.ReferendumAuthState";
    option (aelf.base) = "acs3.proto";
    option (aelf.base) = "acs1.proto";
    // Actions
    rpc Initialize (google.protobuf.Empty) returns (google.protobuf.Empty) {
    }
    rpc ReclaimVoteToken (aelf.Hash) returns (google.protobuf.Empty) {
    }
    rpc CreateOrganization (CreateOrganizationInput) returns (aelf.Address) {
    }
    rpc GetOrganization (aelf.Address) returns (Organization) {
        option (aelf.is_view) = true;
    }
}

message CreateOrganizationInput {
    int64 release_threshold = 1;
    string token_symbol = 2;
}

message Organization {
    int64 release_threshold = 1;
    string token_symbol = 2;
    aelf.Address organization_address = 3;
    aelf.Hash organization_hash = 4;
}

message Receipt {
    int64 amount = 1;
    string token_symbol = 2;
    aelf.Hash lock_id = 3;
}

message ProposalInfo {
    aelf.Hash proposal_id = 1;
    string contract_method_name = 2;
    aelf.Address to_address = 3;
    bytes params = 4;
    google.protobuf.Timestamp expired_time = 5;
    aelf.Address proposer = 6;
    aelf.Address organization_address = 7;
}