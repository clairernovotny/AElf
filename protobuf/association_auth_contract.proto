syntax = "proto3";

import "acs1.proto";
import "acs3.proto";

option csharp_namespace = "AElf.Contracts.AssociationAuth";

service AssociationAuthContract {
    
    option (aelf.csharp_state) = "AElf.Contracts.AssociationAuth.AssociationAuthState";
    option (aelf.base) = "acs3.proto";
    option (aelf.base) = "acs1.proto";
    
    // Actions    
    rpc CreateOrganization (CreateOrganizationInput) returns (aelf.Address) {
    }
    
    //view
    rpc GetOrganization (aelf.Address) returns (Organization) {
        option (aelf.is_view) = true;
    }
}

message CreateOrganizationInput{
    repeated Reviewer reviewers = 1;
    int32 release_threshold = 2;
    int32 proposer_threshold = 3;
}

message Organization{
    int32 release_threshold = 1;
    repeated Reviewer reviewers = 2;
    int32 proposer_threshold = 3;
    aelf.Address organization_address = 4;
    aelf.Hash organization_hash = 5;
}

message Reviewer {
    aelf.Address address  = 1;
    int32 weight = 2;
}

message ProposalInfo {
    aelf.Hash proposal_id = 1;
    string contract_method_name = 2;
    aelf.Address to_address = 3;
    bytes params = 4;
    google.protobuf.Timestamp expired_time = 5;
    aelf.Address proposer = 6;
    aelf.Address organization_address = 7;
    int32 approved_weight = 8;
    repeated aelf.Address approved_reviewer = 9;
}